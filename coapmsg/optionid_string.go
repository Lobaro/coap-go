// Code generated by "stringer -type=OptionId"; DO NOT EDIT.

package coapmsg

import "fmt"

const (
	_OptionId_name_0 = "IfMatch"
	_OptionId_name_1 = "URIHostETagIfNoneMatchObserveURIPortLocationPath"
	_OptionId_name_2 = "URIPathContentFormat"
	_OptionId_name_3 = "MaxAgeURIQuery"
	_OptionId_name_4 = "Accept"
	_OptionId_name_5 = "LocationQuery"
	_OptionId_name_6 = "ProxyURI"
	_OptionId_name_7 = "ProxyScheme"
	_OptionId_name_8 = "Size1"
)

var (
	_OptionId_index_0 = [...]uint8{0, 7}
	_OptionId_index_1 = [...]uint8{0, 7, 11, 22, 29, 36, 48}
	_OptionId_index_2 = [...]uint8{0, 7, 20}
	_OptionId_index_3 = [...]uint8{0, 6, 14}
	_OptionId_index_4 = [...]uint8{0, 6}
	_OptionId_index_5 = [...]uint8{0, 13}
	_OptionId_index_6 = [...]uint8{0, 8}
	_OptionId_index_7 = [...]uint8{0, 11}
	_OptionId_index_8 = [...]uint8{0, 5}
)

func (i OptionId) String() string {
	switch {
	case i == 1:
		return _OptionId_name_0
	case 3 <= i && i <= 8:
		i -= 3
		return _OptionId_name_1[_OptionId_index_1[i]:_OptionId_index_1[i+1]]
	case 11 <= i && i <= 12:
		i -= 11
		return _OptionId_name_2[_OptionId_index_2[i]:_OptionId_index_2[i+1]]
	case 14 <= i && i <= 15:
		i -= 14
		return _OptionId_name_3[_OptionId_index_3[i]:_OptionId_index_3[i+1]]
	case i == 17:
		return _OptionId_name_4
	case i == 20:
		return _OptionId_name_5
	case i == 35:
		return _OptionId_name_6
	case i == 39:
		return _OptionId_name_7
	case i == 60:
		return _OptionId_name_8
	default:
		return fmt.Sprintf("OptionId(%d)", i)
	}
}
